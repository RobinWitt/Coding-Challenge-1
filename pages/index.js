import artistsDataToCsv from "@/lib/dataToCsv";
import handleSearchArtists from "@/lib/fetchArtists";
import Head from "next/head";
import { useRef, useState } from "react";

export default function Home() {
  const ref = useRef(null);
  const [searchResults, setSearchResults] = useState();

  async function handleSubmit(event) {
    event.preventDefault();

    const formData = new FormData(event.target);
    const data = Object.fromEntries(formData);
    const response = await handleSearchArtists(data.artist);
    setSearchResults(response);

    event.target.reset();
  }

  function handleFocus() {
    ref.current.focus();
  }

  return (
    <>
      <Head>
        <title>Artists Search</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <main>
        <section className="section-search">
          <h1>Search for Artists on last.fm</h1>
          <form onSubmit={handleSubmit}>
            <label htmlFor="artist-search">Enter artist name</label>
            <input
              id="artist-search"
              type="text"
              name="artist"
              required
              ref={ref}
            />
            <button type="submit">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <title>magnify</title>
                <path d="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" />
              </svg>
              Search
            </button>
          </form>
        </section>
        <section className="section-results">
          {searchResults && searchResults.length > 5 ? (
            <>
              <button
                type="button"
                onClick={() => artistsDataToCsv(searchResults)}
              >
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                  <title>file-download-outline</title>
                  <path d="M14,2L20,8V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V4A2,2 0 0,1 6,2H14M18,20V9H13V4H6V20H18M12,19L8,15H10.5V12H13.5V15H16L12,19Z" />
                </svg>
                Download as CSV File
              </button>
              <h2>Your results:</h2>
              <ul className="results-list">
                <li className="results-listheader">
                  <span>Name:</span>
                  <span>URL:</span>
                </li>
                {searchResults.map(({ name, url }) => {
                  return (
                    <li key={self.crypto.randomUUID()}>
                      <span>{name}</span>
                      <span>{url}</span>
                    </li>
                  );
                })}
              </ul>
            </>
          ) : (
            searchResults && (
              <>
                <h2>No matches to your search</h2>
                <p className="random-results__text">
                  Here are some fictional artist names instead:
                </p>
                <ul className="random-results__list">
                  {searchResults.map((artist) => {
                    return (
                      <li key={self.crypto.randomUUID()}>
                        <span>{artist}</span>
                      </li>
                    );
                  })}
                </ul>
              </>
            )
          )}
          <button
            type="button"
            onClick={handleFocus}
            className="new-search-button"
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
              <title>arrow-up</title>
              <path d="M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z" />
            </svg>
            Try different search
          </button>
        </section>
      </main>
    </>
  );
}
